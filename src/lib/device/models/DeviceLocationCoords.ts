/* tslint:disable */
/* eslint-disable */
/**
 * Head Of TP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DeviceLocationCoords
 */
export interface DeviceLocationCoords {
    /**
     * 
     * @type {number}
     * @memberof DeviceLocationCoords
     */
    latitude: number;
    /**
     * 
     * @type {number}
     * @memberof DeviceLocationCoords
     */
    longitude: number;
    /**
     * 
     * @type {number}
     * @memberof DeviceLocationCoords
     */
    accuracy: number;
    /**
     * 
     * @type {number}
     * @memberof DeviceLocationCoords
     */
    speed: number;
    /**
     * 
     * @type {number}
     * @memberof DeviceLocationCoords
     */
    heading: number;
    /**
     * 
     * @type {number}
     * @memberof DeviceLocationCoords
     */
    altitude: number;
}

/**
 * Check if a given object implements the DeviceLocationCoords interface.
 */
export function instanceOfDeviceLocationCoords(value: object): value is DeviceLocationCoords {
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('accuracy' in value) || value['accuracy'] === undefined) return false;
    if (!('speed' in value) || value['speed'] === undefined) return false;
    if (!('heading' in value) || value['heading'] === undefined) return false;
    if (!('altitude' in value) || value['altitude'] === undefined) return false;
    return true;
}

export function DeviceLocationCoordsFromJSON(json: any): DeviceLocationCoords {
    return DeviceLocationCoordsFromJSONTyped(json, false);
}

export function DeviceLocationCoordsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceLocationCoords {
    if (json == null) {
        return json;
    }
    return {
        
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'accuracy': json['accuracy'],
        'speed': json['speed'],
        'heading': json['heading'],
        'altitude': json['altitude'],
    };
}

export function DeviceLocationCoordsToJSON(json: any): DeviceLocationCoords {
    return DeviceLocationCoordsToJSONTyped(json, false);
}

export function DeviceLocationCoordsToJSONTyped(value?: DeviceLocationCoords | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'accuracy': value['accuracy'],
        'speed': value['speed'],
        'heading': value['heading'],
        'altitude': value['altitude'],
    };
}


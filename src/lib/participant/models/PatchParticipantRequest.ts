/* tslint:disable */
/* eslint-disable */
/**
 * Head Of TP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoleType } from './RoleType';
import {
    RoleTypeFromJSON,
    RoleTypeFromJSONTyped,
    RoleTypeToJSON,
    RoleTypeToJSONTyped,
} from './RoleType';
import type { VehicleType } from './VehicleType';
import {
    VehicleTypeFromJSON,
    VehicleTypeFromJSONTyped,
    VehicleTypeToJSON,
    VehicleTypeToJSONTyped,
} from './VehicleType';

/**
 * 
 * @export
 * @interface PatchParticipantRequest
 */
export interface PatchParticipantRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchParticipantRequest
     */
    name: string;
    /**
     * 
     * @type {VehicleType}
     * @memberof PatchParticipantRequest
     */
    vehicle: VehicleType;
    /**
     * 
     * @type {RoleType}
     * @memberof PatchParticipantRequest
     */
    role: RoleType;
    /**
     * 
     * @type {string}
     * @memberof PatchParticipantRequest
     */
    deviceId: string;
}



/**
 * Check if a given object implements the PatchParticipantRequest interface.
 */
export function instanceOfPatchParticipantRequest(value: object): value is PatchParticipantRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('vehicle' in value) || value['vehicle'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('deviceId' in value) || value['deviceId'] === undefined) return false;
    return true;
}

export function PatchParticipantRequestFromJSON(json: any): PatchParticipantRequest {
    return PatchParticipantRequestFromJSONTyped(json, false);
}

export function PatchParticipantRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchParticipantRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'vehicle': VehicleTypeFromJSON(json['vehicle']),
        'role': RoleTypeFromJSON(json['role']),
        'deviceId': json['deviceId'],
    };
}

export function PatchParticipantRequestToJSON(json: any): PatchParticipantRequest {
    return PatchParticipantRequestToJSONTyped(json, false);
}

export function PatchParticipantRequestToJSONTyped(value?: PatchParticipantRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'vehicle': VehicleTypeToJSON(value['vehicle']),
        'role': RoleTypeToJSON(value['role']),
        'deviceId': value['deviceId'],
    };
}

